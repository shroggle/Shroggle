<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.6.0) on Tue Feb 27 00:41:50 CET 2007 -->
<TITLE>
RrdGraphDef
</TITLE>

<META NAME="date" CONTENT="2007-02-27">

<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../stylesheet.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="RrdGraphDef";
    }
}
</SCRIPT>
<NOSCRIPT>
</NOSCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">
<HR>


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html" title="interface in org.rrd4j.graph"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../org/rrd4j/graph/RrdGraphDefTemplate.html" title="class in org.rrd4j.graph"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../index.html?org/rrd4j/graph/RrdGraphDef.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="RrdGraphDef.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
org.rrd4j.graph</FONT>
<BR>
Class RrdGraphDef</H2>
<PRE>
java.lang.Object
  <IMG SRC="../../../resources/inherit.gif" ALT="extended by "><B>org.rrd4j.graph.RrdGraphDef</B>
</PRE>
<DL>
<DT><B>All Implemented Interfaces:</B> <DD><A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html" title="interface in org.rrd4j.graph">RrdGraphConstants</A></DD>
</DL>
<HR>
<DL>
<DT><PRE>public class <B>RrdGraphDef</B><DT>extends java.lang.Object<DT>implements <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html" title="interface in org.rrd4j.graph">RrdGraphConstants</A></DL>
</PRE>

<P>
Class which should be used to define new Rrd4j graph. Once constructed and populated with data
 object of this class should be passed to the constructor of the <A HREF="../../../org/rrd4j/graph/RrdGraph.html" title="class in org.rrd4j.graph"><CODE>RrdGraph</CODE></A> class which
 will actually create the graph.
 <p/>
 The text printed below the actual graph can be formated by appending
 special escaped characters at the end of a text. When ever such a
 character occurs, all pending text is pushed onto the graph according to
 the character specified.
 <p/>
 Valid markers are: \j for justified, \l for left aligned, \r for right
 aligned and \c for centered.
 <p/>
 Normally there are two space characters inserted between every two
 items printed into the graph. The space following a string can be
 suppressed by putting a \g at the end of the string. The \g also squashes
 any space inside the string if it is at the very end of the string.
 This can be used in connection with %s to suppress empty unit strings.
 <p/>
 A special case is COMMENT:\s this inserts some additional vertical
 space before placing the next row of legends.
 <p/>
 When text has to be formated without special instructions from your
 side, RRDTool will automatically justify the text as soon as one string
 goes over the right edge. If you want to prevent the justification
 without forcing a newline, you can use the special tag \J at the end of
 the string to disable the auto justification.
<P>

<P>
<HR>

<P>
<!-- =========== FIELD SUMMARY =========== -->

<A NAME="field_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Field Summary</B></FONT></TH>
</TR>
</TABLE>
&nbsp;<A NAME="fields_inherited_from_class_org.rrd4j.graph.RrdGraphConstants"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Fields inherited from interface org.rrd4j.graph.<A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html" title="interface in org.rrd4j.graph">RrdGraphConstants</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#ALIGN_CENTER_MARKER">ALIGN_CENTER_MARKER</A>, <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#ALIGN_JUSTIFIED_MARKER">ALIGN_JUSTIFIED_MARKER</A>, <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#ALIGN_LEFT_MARKER">ALIGN_LEFT_MARKER</A>, <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#ALIGN_RIGHT_MARKER">ALIGN_RIGHT_MARKER</A>, <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#COLOR_ARROW">COLOR_ARROW</A>, <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#COLOR_BACK">COLOR_BACK</A>, <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#COLOR_CANVAS">COLOR_CANVAS</A>, <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#COLOR_FONT">COLOR_FONT</A>, <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#COLOR_FRAME">COLOR_FRAME</A>, <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#COLOR_GRID">COLOR_GRID</A>, <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#COLOR_MGRID">COLOR_MGRID</A>, <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#COLOR_NAMES">COLOR_NAMES</A>, <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#COLOR_SHADEA">COLOR_SHADEA</A>, <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#COLOR_SHADEB">COLOR_SHADEB</A>, <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#DAY">DAY</A>, <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#DEFAULT_ARROW_COLOR">DEFAULT_ARROW_COLOR</A>, <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#DEFAULT_BACK_COLOR">DEFAULT_BACK_COLOR</A>, <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#DEFAULT_BASE">DEFAULT_BASE</A>, <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#DEFAULT_CANVAS_COLOR">DEFAULT_CANVAS_COLOR</A>, <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#DEFAULT_END">DEFAULT_END</A>, <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#DEFAULT_FONT_COLOR">DEFAULT_FONT_COLOR</A>, <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#DEFAULT_FONT_NAME">DEFAULT_FONT_NAME</A>, <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#DEFAULT_FRAME_COLOR">DEFAULT_FRAME_COLOR</A>, <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#DEFAULT_GRID_COLOR">DEFAULT_GRID_COLOR</A>, <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#DEFAULT_HEIGHT">DEFAULT_HEIGHT</A>, <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#DEFAULT_IMAGE_FORMAT">DEFAULT_IMAGE_FORMAT</A>, <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#DEFAULT_IMAGE_QUALITY">DEFAULT_IMAGE_QUALITY</A>, <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#DEFAULT_LARGE_FONT">DEFAULT_LARGE_FONT</A>, <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#DEFAULT_MGRID_COLOR">DEFAULT_MGRID_COLOR</A>, <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#DEFAULT_SHADEA_COLOR">DEFAULT_SHADEA_COLOR</A>, <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#DEFAULT_SHADEB_COLOR">DEFAULT_SHADEB_COLOR</A>, <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#DEFAULT_SMALL_FONT">DEFAULT_SMALL_FONT</A>, <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#DEFAULT_START">DEFAULT_START</A>, <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#DEFAULT_UNITS_LENGTH">DEFAULT_UNITS_LENGTH</A>, <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#DEFAULT_WIDTH">DEFAULT_WIDTH</A>, <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#FIRST_DAY_OF_WEEK">FIRST_DAY_OF_WEEK</A>, <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#FRIDAY">FRIDAY</A>, <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#GLUE_MARKER">GLUE_MARKER</A>, <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#GRID_STROKE">GRID_STROKE</A>, <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#HOUR">HOUR</A>, <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#IN_MEMORY_IMAGE">IN_MEMORY_IMAGE</A>, <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#LEGEND_BOX">LEGEND_BOX</A>, <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#LEGEND_BOX_SPACE">LEGEND_BOX_SPACE</A>, <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#LEGEND_INTERSPACING">LEGEND_INTERSPACING</A>, <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#LEGEND_LEADING">LEGEND_LEADING</A>, <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#LEGEND_LEADING_SMALL">LEGEND_LEADING_SMALL</A>, <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#MARKERS">MARKERS</A>, <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#MINUTE">MINUTE</A>, <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#MONDAY">MONDAY</A>, <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#MONTH">MONTH</A>, <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#NO_JUSTIFICATION_MARKER">NO_JUSTIFICATION_MARKER</A>, <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#PADDING_BOTTOM">PADDING_BOTTOM</A>, <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#PADDING_LEFT">PADDING_LEFT</A>, <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#PADDING_LEGEND">PADDING_LEGEND</A>, <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#PADDING_PLOT">PADDING_PLOT</A>, <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#PADDING_RIGHT">PADDING_RIGHT</A>, <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#PADDING_TITLE">PADDING_TITLE</A>, <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#PADDING_TOP">PADDING_TOP</A>, <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#PADDING_VLABEL">PADDING_VLABEL</A>, <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#SATURDAY">SATURDAY</A>, <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#SECOND">SECOND</A>, <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#SUNDAY">SUNDAY</A>, <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#THURSDAY">THURSDAY</A>, <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#TICK_STROKE">TICK_STROKE</A>, <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#TUESDAY">TUESDAY</A>, <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#VERTICAL_SPACING_MARKER">VERTICAL_SPACING_MARKER</A>, <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#WEDNESDAY">WEDNESDAY</A>, <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#WEEK">WEEK</A>, <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#YEAR">YEAR</A></CODE></TD>
</TR>
</TABLE>
&nbsp;
<!-- ======== CONSTRUCTOR SUMMARY ======== -->

<A NAME="constructor_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Constructor Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../org/rrd4j/graph/RrdGraphDef.html#RrdGraphDef()">RrdGraphDef</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Creates RrdGraphDef object and sets default time span (default ending time is 'now',
 default starting time is 'end-1day'.</TD>
</TR>
</TABLE>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Method Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/rrd4j/graph/RrdGraphDef.html#area(java.lang.String, java.awt.Paint, java.lang.String)">area</A></B>(java.lang.String&nbsp;srcName,
     java.awt.Paint&nbsp;color,
     java.lang.String&nbsp;legend)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Plots requested data in the form of the filled area starting from zero, using
 the color specified.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/rrd4j/graph/RrdGraphDef.html#comment(java.lang.String)">comment</A></B>(java.lang.String&nbsp;text)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Comment to be printed on the graph.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/rrd4j/graph/RrdGraphDef.html#datasource(java.lang.String, org.rrd4j.data.Plottable)">datasource</A></B>(java.lang.String&nbsp;name,
           <A HREF="../../../org/rrd4j/data/Plottable.html" title="class in org.rrd4j.data">Plottable</A>&nbsp;plottable)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Creates a new (plottable) datasource.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/rrd4j/graph/RrdGraphDef.html#datasource(java.lang.String, java.lang.String)">datasource</A></B>(java.lang.String&nbsp;name,
           java.lang.String&nbsp;rpnExpression)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Create a new virtual datasource by evaluating a mathematical
 expression, specified in Reverse Polish Notation (RPN).</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/rrd4j/graph/RrdGraphDef.html#datasource(java.lang.String, java.lang.String, org.rrd4j.ConsolFun)">datasource</A></B>(java.lang.String&nbsp;name,
           java.lang.String&nbsp;defName,
           org.rrd4j.ConsolFun&nbsp;consolFun)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Creates a new (static) virtual datasouce.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/rrd4j/graph/RrdGraphDef.html#datasource(java.lang.String, java.lang.String, java.lang.String, org.rrd4j.ConsolFun)">datasource</A></B>(java.lang.String&nbsp;name,
           java.lang.String&nbsp;rrdPath,
           java.lang.String&nbsp;dsName,
           org.rrd4j.ConsolFun&nbsp;consolFun)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Defines virtual datasource.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/rrd4j/graph/RrdGraphDef.html#datasource(java.lang.String, java.lang.String, java.lang.String, org.rrd4j.ConsolFun, java.lang.String)">datasource</A></B>(java.lang.String&nbsp;name,
           java.lang.String&nbsp;rrdPath,
           java.lang.String&nbsp;dsName,
           org.rrd4j.ConsolFun&nbsp;consolFun,
           java.lang.String&nbsp;backend)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Defines virtual datasource.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/rrd4j/graph/RrdGraphDef.html#gprint(java.lang.String, org.rrd4j.ConsolFun, java.lang.String)">gprint</A></B>(java.lang.String&nbsp;srcName,
       org.rrd4j.ConsolFun&nbsp;consolFun,
       java.lang.String&nbsp;format)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method does basically the same thing as <A HREF="../../../org/rrd4j/graph/RrdGraphDef.html#print(java.lang.String, org.rrd4j.ConsolFun, java.lang.String)"><CODE>print(String, ConsolFun, String)</CODE></A>,
 but the result is printed on the graph itself, below the chart area.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/rrd4j/graph/RrdGraphDef.html#hrule(double, java.awt.Paint, java.lang.String)">hrule</A></B>(double&nbsp;value,
      java.awt.Paint&nbsp;color,
      java.lang.String&nbsp;legend)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Draws a horizontal rule into the graph and optionally adds a legend</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/rrd4j/graph/RrdGraphDef.html#hrule(double, java.awt.Paint, java.lang.String, float)">hrule</A></B>(double&nbsp;value,
      java.awt.Paint&nbsp;color,
      java.lang.String&nbsp;legend,
      float&nbsp;width)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Draws a horizontal rule into the graph and optionally adds a legend</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/rrd4j/graph/RrdGraphDef.html#line(java.lang.String, java.awt.Paint, java.lang.String)">line</A></B>(java.lang.String&nbsp;srcName,
     java.awt.Paint&nbsp;color,
     java.lang.String&nbsp;legend)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Plots requested data as a line, using the color specified.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/rrd4j/graph/RrdGraphDef.html#line(java.lang.String, java.awt.Paint, java.lang.String, float)">line</A></B>(java.lang.String&nbsp;srcName,
     java.awt.Paint&nbsp;color,
     java.lang.String&nbsp;legend,
     float&nbsp;width)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Plots requested data as a line, using the color and the line width specified.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/rrd4j/graph/RrdGraphDef.html#print(java.lang.String, org.rrd4j.ConsolFun, java.lang.String)">print</A></B>(java.lang.String&nbsp;srcName,
      org.rrd4j.ConsolFun&nbsp;consolFun,
      java.lang.String&nbsp;format)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Calculates the chosen consolidation function CF over the given datasource
 and creates the result by using the given format string.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/rrd4j/graph/RrdGraphDef.html#setAltAutoscale(boolean)">setAltAutoscale</A></B>(boolean&nbsp;altAutoscale)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Computes Y range based on function absolute minimum and maximum
 values.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/rrd4j/graph/RrdGraphDef.html#setAltAutoscaleMax(boolean)">setAltAutoscaleMax</A></B>(boolean&nbsp;altAutoscaleMax)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Computes Y range based on function absolute minimum and maximum
 values.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/rrd4j/graph/RrdGraphDef.html#setAltYGrid(boolean)">setAltYGrid</A></B>(boolean&nbsp;altYGrid)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Places Y grid dynamically based on graph Y range.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/rrd4j/graph/RrdGraphDef.html#setAltYMrtg(boolean)">setAltYMrtg</A></B>(boolean&nbsp;altYMrtg)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Use this method to request MRTG-like graph (false by default)</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/rrd4j/graph/RrdGraphDef.html#setAntiAliasing(boolean)">setAntiAliasing</A></B>(boolean&nbsp;antiAliasing)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Controls if the chart area of the image should be antialiased or not.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/rrd4j/graph/RrdGraphDef.html#setBackgroundImage(java.lang.String)">setBackgroundImage</A></B>(java.lang.String&nbsp;backgroundImage)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets background image - currently, only PNG images can be used as background.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/rrd4j/graph/RrdGraphDef.html#setBase(double)">setBase</A></B>(double&nbsp;base)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets default base for magnitude scaling.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/rrd4j/graph/RrdGraphDef.html#setColor(int, java.awt.Paint)">setColor</A></B>(int&nbsp;colorTag,
         java.awt.Paint&nbsp;color)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Overrides the colors for the standard elements of the graph.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/rrd4j/graph/RrdGraphDef.html#setColor(java.lang.String, java.awt.Paint)">setColor</A></B>(java.lang.String&nbsp;colorName,
         java.awt.Paint&nbsp;color)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Overrides the colors for the standard elements of the graph by element name.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/rrd4j/graph/RrdGraphDef.html#setDrawXGrid(boolean)">setDrawXGrid</A></B>(boolean&nbsp;drawXGrid)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets visibility of the X-axis grid.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/rrd4j/graph/RrdGraphDef.html#setDrawYGrid(boolean)">setDrawYGrid</A></B>(boolean&nbsp;drawYGrid)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets visibility of the Y-axis grid.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/rrd4j/graph/RrdGraphDef.html#setEndTime(long)">setEndTime</A></B>(long&nbsp;time)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the time when the graph should end.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/rrd4j/graph/RrdGraphDef.html#setFilename(java.lang.String)">setFilename</A></B>(java.lang.String&nbsp;filename)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the name of the graph to generate.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/rrd4j/graph/RrdGraphDef.html#setFirstDayOfWeek(int)">setFirstDayOfWeek</A></B>(int&nbsp;firstDayOfWeek)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets first day of the week.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/rrd4j/graph/RrdGraphDef.html#setForceRulesLegend(boolean)">setForceRulesLegend</A></B>(boolean&nbsp;forceRulesLegend)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Force the generation of HRULE and VRULE legend even if those HRULE
 or VRULE will not be drawn because out of graph boundaries.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/rrd4j/graph/RrdGraphDef.html#setHeight(int)">setHeight</A></B>(int&nbsp;height)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets height of the drawing area within the graph.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/rrd4j/graph/RrdGraphDef.html#setImageFormat(java.lang.String)">setImageFormat</A></B>(java.lang.String&nbsp;imageFormat)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets image format.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/rrd4j/graph/RrdGraphDef.html#setImageInfo(java.lang.String)">setImageInfo</A></B>(java.lang.String&nbsp;imageInfo)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Creates additional image information.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/rrd4j/graph/RrdGraphDef.html#setImageQuality(float)">setImageQuality</A></B>(float&nbsp;imageQuality)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets image quality.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/rrd4j/graph/RrdGraphDef.html#setInterlaced(boolean)">setInterlaced</A></B>(boolean&nbsp;interlaced)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Creates interlaced GIF image (currently not supported,
 method is present only for RRDTool comaptibility).</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/rrd4j/graph/RrdGraphDef.html#setLargeFont(java.awt.Font)">setLargeFont</A></B>(java.awt.Font&nbsp;largeFont)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets title font.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/rrd4j/graph/RrdGraphDef.html#setLazy(boolean)">setLazy</A></B>(boolean&nbsp;lazy)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Creates graph only if the current graph is out of date or not existent.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/rrd4j/graph/RrdGraphDef.html#setLogarithmic(boolean)">setLogarithmic</A></B>(boolean&nbsp;logarithmic)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets logarithmic y-axis scaling.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/rrd4j/graph/RrdGraphDef.html#setMaxValue(double)">setMaxValue</A></B>(double&nbsp;maxValue)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Defines the value normally located at the upper border of the
 graph.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/rrd4j/graph/RrdGraphDef.html#setMinValue(double)">setMinValue</A></B>(double&nbsp;minValue)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the lower limit of a graph.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/rrd4j/graph/RrdGraphDef.html#setNoLegend(boolean)">setNoLegend</A></B>(boolean&nbsp;noLegend)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Suppress generation of legend, only render the graph.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/rrd4j/graph/RrdGraphDef.html#setNoMinorGrid(boolean)">setNoMinorGrid</A></B>(boolean&nbsp;noMinorGrid)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Use this method to turn off minor grid lines (printed by default)</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/rrd4j/graph/RrdGraphDef.html#setOnlyGraph(boolean)">setOnlyGraph</A></B>(boolean&nbsp;onlyGraph)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Suppresses anything but the graph, works only for height < 64.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/rrd4j/graph/RrdGraphDef.html#setOverlayImage(java.lang.String)">setOverlayImage</A></B>(java.lang.String&nbsp;overlayImage)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets overlay image - currently, only PNG images can be used as overlay.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/rrd4j/graph/RrdGraphDef.html#setPoolUsed(boolean)">setPoolUsed</A></B>(boolean&nbsp;poolUsed)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets RrdDbPool usage policy (defaults to true).</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/rrd4j/graph/RrdGraphDef.html#setRigid(boolean)">setRigid</A></B>(boolean&nbsp;rigid)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets rigid boundaries mode.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/rrd4j/graph/RrdGraphDef.html#setShowSignature(boolean)">setShowSignature</A></B>(boolean&nbsp;showSignature)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Shows or hides graph signature (gator) in the top right corner of the graph</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/rrd4j/graph/RrdGraphDef.html#setSmallFont(java.awt.Font)">setSmallFont</A></B>(java.awt.Font&nbsp;smallFont)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets default font for graphing.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/rrd4j/graph/RrdGraphDef.html#setStartTime(long)">setStartTime</A></B>(long&nbsp;time)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the time when the graph should begin.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/rrd4j/graph/RrdGraphDef.html#setStep(long)">setStep</A></B>(long&nbsp;step)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Suggests which time step should be used by Rrd4j while processing data from RRD files.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/rrd4j/graph/RrdGraphDef.html#setTimeAxis(int, int, int, int, int, int, int, java.lang.String)">setTimeAxis</A></B>(int&nbsp;minorUnit,
            int&nbsp;minorUnitCount,
            int&nbsp;majorUnit,
            int&nbsp;majorUnitCount,
            int&nbsp;labelUnit,
            int&nbsp;labelUnitCount,
            int&nbsp;labelSpan,
            java.lang.String&nbsp;simpleDateFormat)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Configures x-axis grid and labels.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/rrd4j/graph/RrdGraphDef.html#setTimeSpan(long[])">setTimeSpan</A></B>(long[]&nbsp;timestamps)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets starting and ending time for the for the graph.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/rrd4j/graph/RrdGraphDef.html#setTimeSpan(long, long)">setTimeSpan</A></B>(long&nbsp;startTime,
            long&nbsp;endTime)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets starting and ending time for the for the graph.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/rrd4j/graph/RrdGraphDef.html#setTitle(java.lang.String)">setTitle</A></B>(java.lang.String&nbsp;title)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Defines a title to be written into the graph.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/rrd4j/graph/RrdGraphDef.html#setUnit(java.lang.String)">setUnit</A></B>(java.lang.String&nbsp;unit)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets unit to be displayed on y axis.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/rrd4j/graph/RrdGraphDef.html#setUnitsExponent(int)">setUnitsExponent</A></B>(int&nbsp;unitsExponent)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the 10**unitsExponent scaling of the y-axis values.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/rrd4j/graph/RrdGraphDef.html#setUnitsLength(int)">setUnitsLength</A></B>(int&nbsp;unitsLength)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the character width on the left side of the graph for
 y-axis values.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/rrd4j/graph/RrdGraphDef.html#setValueAxis(double, int)">setValueAxis</A></B>(double&nbsp;gridStep,
             int&nbsp;labelFactor)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets vertical axis grid and labels.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/rrd4j/graph/RrdGraphDef.html#setVerticalLabel(java.lang.String)">setVerticalLabel</A></B>(java.lang.String&nbsp;verticalLabel)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets vertical label on the left side of the graph.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/rrd4j/graph/RrdGraphDef.html#setWidth(int)">setWidth</A></B>(int&nbsp;width)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets width of the drawing area within the graph.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/rrd4j/graph/RrdGraphDef.html#stack(java.lang.String, java.awt.Paint, java.lang.String)">stack</A></B>(java.lang.String&nbsp;srcName,
      java.awt.Paint&nbsp;color,
      java.lang.String&nbsp;legend)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Does the same as <A HREF="../../../org/rrd4j/graph/RrdGraphDef.html#line(java.lang.String, java.awt.Paint, java.lang.String)"><CODE>line(String, java.awt.Paint, String)</CODE></A>,
 but the graph gets stacked on top of the
 previous LINE, AREA or STACK graph.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/rrd4j/graph/RrdGraphDef.html#vrule(long, java.awt.Paint, java.lang.String)">vrule</A></B>(long&nbsp;timestamp,
      java.awt.Paint&nbsp;color,
      java.lang.String&nbsp;legend)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Draws a vertical rule into the graph and optionally adds a legend</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/rrd4j/graph/RrdGraphDef.html#vrule(long, java.awt.Paint, java.lang.String, float)">vrule</A></B>(long&nbsp;timestamp,
      java.awt.Paint&nbsp;color,
      java.lang.String&nbsp;legend,
      float&nbsp;width)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Draws a vertical rule into the graph and optionally adds a legend</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class java.lang.Object</B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ========= CONSTRUCTOR DETAIL ======== -->

<A NAME="constructor_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Constructor Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="RrdGraphDef()"><!-- --></A><H3>
RrdGraphDef</H3>
<PRE>
public <B>RrdGraphDef</B>()</PRE>
<DL>
<DD>Creates RrdGraphDef object and sets default time span (default ending time is 'now',
 default starting time is 'end-1day'.
<P>
</DL>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Method Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="setStartTime(long)"><!-- --></A><H3>
setStartTime</H3>
<PRE>
public void <B>setStartTime</B>(long&nbsp;time)</PRE>
<DL>
<DD>Sets the time when the graph should begin. Time in seconds since epoch
 (1970-01-01) is required. Negative numbers are relative to the current time.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>time</CODE> - Starting time for the graph in seconds since epoch</DL>
</DD>
</DL>
<HR>

<A NAME="setEndTime(long)"><!-- --></A><H3>
setEndTime</H3>
<PRE>
public void <B>setEndTime</B>(long&nbsp;time)</PRE>
<DL>
<DD>Sets the time when the graph should end. Time in seconds since epoch
 (1970-01-01) is required. Negative numbers are relative to the current time.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>time</CODE> - Ending time for the graph in seconds since epoch</DL>
</DD>
</DL>
<HR>

<A NAME="setTimeSpan(long, long)"><!-- --></A><H3>
setTimeSpan</H3>
<PRE>
public void <B>setTimeSpan</B>(long&nbsp;startTime,
                        long&nbsp;endTime)</PRE>
<DL>
<DD>Sets starting and ending time for the for the graph. Timestamps in seconds since epoch are
 required. Negative numbers are relative to the current time.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>startTime</CODE> - Starting time in seconds since epoch<DD><CODE>endTime</CODE> - Ending time in seconds since epoch</DL>
</DD>
</DL>
<HR>

<A NAME="setTimeSpan(long[])"><!-- --></A><H3>
setTimeSpan</H3>
<PRE>
public void <B>setTimeSpan</B>(long[]&nbsp;timestamps)</PRE>
<DL>
<DD>Sets starting and ending time for the for the graph. Timestamps in seconds since epoch are
 required.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>timestamps</CODE> - Array of timestamps. The first array item will be chosen for the starting
                   timestamp. The last array item will be chosen for the ending timestamp.</DL>
</DD>
</DL>
<HR>

<A NAME="setPoolUsed(boolean)"><!-- --></A><H3>
setPoolUsed</H3>
<PRE>
public void <B>setPoolUsed</B>(boolean&nbsp;poolUsed)</PRE>
<DL>
<DD>Sets RrdDbPool usage policy (defaults to true). If set to true,
 <A HREF="../../../org/rrd4j/core/RrdDbPool.html" title="class in org.rrd4j.core"><CODE>RrdDbPool</CODE></A> will be used to
 access individual RRD files. If set to false, RRD files will be accessed directly.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>poolUsed</CODE> - true, if RrdDbPool class should be used. False otherwise.</DL>
</DD>
</DL>
<HR>

<A NAME="setFilename(java.lang.String)"><!-- --></A><H3>
setFilename</H3>
<PRE>
public void <B>setFilename</B>(java.lang.String&nbsp;filename)</PRE>
<DL>
<DD>Sets the name of the graph to generate. Since Rrd4j outputs GIFs, PNGs,
 and JPEGs it's recommended that the filename end in either .gif,
 .png or .jpg. Rrd4j does not enforce this, however. If the filename is
 set to '-' the image will be created only in memory (no file will be created).
 PNG and GIF formats are recommended but JPEGs should be avoided.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>filename</CODE> - Path to the image file</DL>
</DD>
</DL>
<HR>

<A NAME="setTimeAxis(int, int, int, int, int, int, int, java.lang.String)"><!-- --></A><H3>
setTimeAxis</H3>
<PRE>
public void <B>setTimeAxis</B>(int&nbsp;minorUnit,
                        int&nbsp;minorUnitCount,
                        int&nbsp;majorUnit,
                        int&nbsp;majorUnitCount,
                        int&nbsp;labelUnit,
                        int&nbsp;labelUnitCount,
                        int&nbsp;labelSpan,
                        java.lang.String&nbsp;simpleDateFormat)</PRE>
<DL>
<DD>Configures x-axis grid and labels. The x-axis label is quite complex to configure.
 So if you don't have very special needs, you can rely on the autoconfiguration to
 get this right.
 <p/>
 Otherwise, you have to configure three elements making up the x-axis labels
 and grid. The base grid, the major grid and the labels.
 The configuration is based on the idea that you first specify a well
 known amount of time and then say how many times
 it has to pass between each minor/major grid line or label. For the label
 you have to define two additional items: The precision of the label
 in seconds and the format used to generate the text
 of the label.
 <p/>
 For example, if you wanted a graph with a base grid every 10 minutes and a major
 one every hour, with labels every hour you would use the following
 x-axis definition.
 <p/>
 <pre>
 setTimeAxis(RrdGraphConstants.MINUTE, 10,
             RrdGraphConstants.HOUR, 1,
             RrdGraphConstants.HOUR, 1,
             0, "%H:%M")
 </pre>
 <p/>
 The precision in this example is 0 because the %X format is exact.
 If the label was the name of the day, we would have had a precision
 of 24 hours, because when you say something like 'Monday' you mean
 the whole day and not Monday morning 00:00. Thus the label should
 be positioned at noon. By defining a precision of 24 hours or
 rather 86400 seconds, you make sure that this happens.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>minorUnit</CODE> - Minor grid unit. Minor grid, major grid and label units
                         can be one of the following constants defined in
                         <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html" title="interface in org.rrd4j.graph"><CODE>RrdGraphConstants</CODE></A>: <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#SECOND"><CODE>SECOND</CODE></A>,
                         <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#MINUTE"><CODE>MINUTE</CODE></A>, <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#HOUR"><CODE>HOUR</CODE></A>,
                         <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#DAY"><CODE>DAY</CODE></A>, <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#WEEK"><CODE>WEEK</CODE></A>,
                         <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#MONTH"><CODE>MONTH</CODE></A>, <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#YEAR"><CODE>YEAR</CODE></A>.<DD><CODE>minorUnitCount</CODE> - Number of minor grid units between minor grid lines.<DD><CODE>majorUnit</CODE> - Major grid unit.<DD><CODE>majorUnitCount</CODE> - Number of major grid units between major grid lines.<DD><CODE>labelUnit</CODE> - Label unit.<DD><CODE>labelUnitCount</CODE> - Number of label units between labels.<DD><CODE>labelSpan</CODE> - Label precision<DD><CODE>simpleDateFormat</CODE> - Date format (SimpleDateFormat pattern of strftime-like pattern)</DL>
</DD>
</DL>
<HR>

<A NAME="setValueAxis(double, int)"><!-- --></A><H3>
setValueAxis</H3>
<PRE>
public void <B>setValueAxis</B>(double&nbsp;gridStep,
                         int&nbsp;labelFactor)</PRE>
<DL>
<DD>Sets vertical axis grid and labels. Makes vertical grid lines appear
 at gridStep interval. Every labelFactor*gridStep, a major grid line is printed,
 along with label showing the value of the grid line.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>gridStep</CODE> - Minor grid step<DD><CODE>labelFactor</CODE> - Specifies how many minor minor grid steps will appear between labels
                    (major grid lines)</DL>
</DD>
</DL>
<HR>

<A NAME="setAltYGrid(boolean)"><!-- --></A><H3>
setAltYGrid</H3>
<PRE>
public void <B>setAltYGrid</B>(boolean&nbsp;altYGrid)</PRE>
<DL>
<DD>Places Y grid dynamically based on graph Y range. Algorithm ensures
 that you always have grid, that there are enough but not too many
 grid lines and the grid is metric. That is grid lines are placed
 every 1, 2, 5 or 10 units.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>altYGrid</CODE> - true, if Y grid should be calculated dynamically (defaults to false)</DL>
</DD>
</DL>
<HR>

<A NAME="setNoMinorGrid(boolean)"><!-- --></A><H3>
setNoMinorGrid</H3>
<PRE>
public void <B>setNoMinorGrid</B>(boolean&nbsp;noMinorGrid)</PRE>
<DL>
<DD>Use this method to turn off minor grid lines (printed by default)
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>noMinorGrid</CODE> - true, to turn off, false to turn on (default)</DL>
</DD>
</DL>
<HR>

<A NAME="setAltYMrtg(boolean)"><!-- --></A><H3>
setAltYMrtg</H3>
<PRE>
public void <B>setAltYMrtg</B>(boolean&nbsp;altYMrtg)</PRE>
<DL>
<DD>Use this method to request MRTG-like graph (false by default)
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>altYMrtg</CODE> - true, to create MRTG-like graph, false otherwise (default)</DL>
</DD>
</DL>
<HR>

<A NAME="setAltAutoscale(boolean)"><!-- --></A><H3>
setAltAutoscale</H3>
<PRE>
public void <B>setAltAutoscale</B>(boolean&nbsp;altAutoscale)</PRE>
<DL>
<DD>Computes Y range based on function absolute minimum and maximum
 values. Default algorithm uses predefined set of ranges.  This is
 good in many cases but it fails miserably when you need to graph
 something like 260 + 0.001 * sin(x). Default algorithm will use Y
 range from 250 to 300 and on the graph you will see almost straight
 line. With --alt-autoscale Y range will be from slightly less the
 260 - 0.001 to slightly more then 260 + 0.001 and periodic behavior
 will be seen.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>altAutoscale</CODE> - true to request alternative autoscaling, false otherwise
                     (default).</DL>
</DD>
</DL>
<HR>

<A NAME="setAltAutoscaleMax(boolean)"><!-- --></A><H3>
setAltAutoscaleMax</H3>
<PRE>
public void <B>setAltAutoscaleMax</B>(boolean&nbsp;altAutoscaleMax)</PRE>
<DL>
<DD>Computes Y range based on function absolute minimum and maximum
 values. Where setAltAutoscale(true) will modify both the absolute maximum AND
 minimum values, this option will only affect the maximum value. The
 minimum value, if not defined elsewhere, will be 0. This
 option can be useful when graphing router traffic when the WAN line
 uses compression, and thus the throughput may be higher than the
 WAN line speed.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>altAutoscaleMax</CODE> - true to request alternative autoscaling, false
                        otherwise (default)</DL>
</DD>
</DL>
<HR>

<A NAME="setUnitsExponent(int)"><!-- --></A><H3>
setUnitsExponent</H3>
<PRE>
public void <B>setUnitsExponent</B>(int&nbsp;unitsExponent)</PRE>
<DL>
<DD>Sets the 10**unitsExponent scaling of the y-axis values. Normally
 values will be scaled to the appropriate units (k, M, etc.). However
 you may wish to display units always in k (Kilo, 10e3) even if
 the data is in the M (Mega, 10e6) range for instance.  Value should
 be an integer which is a multiple of 3 between -18 and 18, inclu-
 sive. It is the exponent on the units you which to use.  For example,
 use 3 to display the y-axis values in k (Kilo, 10e3, thou-
 sands), use -6 to display the y-axis values in u (Micro, 10e-6,
 millionths). Use a value of 0 to prevent any scaling of the y-axis
 values.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>unitsExponent</CODE> - </DL>
</DD>
</DL>
<HR>

<A NAME="setUnitsLength(int)"><!-- --></A><H3>
setUnitsLength</H3>
<PRE>
public void <B>setUnitsLength</B>(int&nbsp;unitsLength)</PRE>
<DL>
<DD>Sets the character width on the left side of the graph for
 y-axis values.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>unitsLength</CODE> - Number of characters on the left side of the graphs
                    reserved for vertical axis labels.</DL>
</DD>
</DL>
<HR>

<A NAME="setVerticalLabel(java.lang.String)"><!-- --></A><H3>
setVerticalLabel</H3>
<PRE>
public void <B>setVerticalLabel</B>(java.lang.String&nbsp;verticalLabel)</PRE>
<DL>
<DD>Sets vertical label on the left side of the graph. This is normally used
 to specify the units used.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>verticalLabel</CODE> - Vertical axis label</DL>
</DD>
</DL>
<HR>

<A NAME="setWidth(int)"><!-- --></A><H3>
setWidth</H3>
<PRE>
public void <B>setWidth</B>(int&nbsp;width)</PRE>
<DL>
<DD>Sets width of the drawing area within the graph. This affects the total
 size of the image.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>width</CODE> - Width of the drawing area.</DL>
</DD>
</DL>
<HR>

<A NAME="setHeight(int)"><!-- --></A><H3>
setHeight</H3>
<PRE>
public void <B>setHeight</B>(int&nbsp;height)</PRE>
<DL>
<DD>Sets height of the drawing area within the graph. This affects the total
 size of the image.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>height</CODE> - Height of the drawing area.</DL>
</DD>
</DL>
<HR>

<A NAME="setInterlaced(boolean)"><!-- --></A><H3>
setInterlaced</H3>
<PRE>
public void <B>setInterlaced</B>(boolean&nbsp;interlaced)</PRE>
<DL>
<DD>Creates interlaced GIF image (currently not supported,
 method is present only for RRDTool comaptibility).
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>interlaced</CODE> - true, if GIF image should be interlaced.</DL>
</DD>
</DL>
<HR>

<A NAME="setImageInfo(java.lang.String)"><!-- --></A><H3>
setImageInfo</H3>
<PRE>
public void <B>setImageInfo</B>(java.lang.String&nbsp;imageInfo)</PRE>
<DL>
<DD>Creates additional image information.
 After the image has been created, the graph function uses imageInfo
 format string (printf-like) to create output similar to
 the <A HREF="../../../org/rrd4j/graph/RrdGraphDef.html#print(java.lang.String, org.rrd4j.ConsolFun, java.lang.String)"><CODE>print(String, ConsolFun, String)</CODE></A> function.
 The format string is supplied with the following parameters:
 filename, xsize and ysize (in that particular order).
 <p/>
 For example, in order to generate an IMG tag
 suitable for including the graph into a web page, the command
 would look like this:
 <pre>
 setImageInfo(&quot;&lt;IMG SRC='/img/%s' WIDTH='%d' HEIGHT='%d' ALT='Demo'&gt;&quot;);
 </pre>
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>imageInfo</CODE> - Image info format. Use %s placeholder for filename, %d placeholder for
                  image width and height.</DL>
</DD>
</DL>
<HR>

<A NAME="setImageFormat(java.lang.String)"><!-- --></A><H3>
setImageFormat</H3>
<PRE>
public void <B>setImageFormat</B>(java.lang.String&nbsp;imageFormat)</PRE>
<DL>
<DD>Sets image format.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>imageFormat</CODE> - "PNG", "GIF" or "JPG".</DL>
</DD>
</DL>
<HR>

<A NAME="setBackgroundImage(java.lang.String)"><!-- --></A><H3>
setBackgroundImage</H3>
<PRE>
public void <B>setBackgroundImage</B>(java.lang.String&nbsp;backgroundImage)</PRE>
<DL>
<DD>Sets background image - currently, only PNG images can be used as background.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>backgroundImage</CODE> - Path to background image</DL>
</DD>
</DL>
<HR>

<A NAME="setOverlayImage(java.lang.String)"><!-- --></A><H3>
setOverlayImage</H3>
<PRE>
public void <B>setOverlayImage</B>(java.lang.String&nbsp;overlayImage)</PRE>
<DL>
<DD>Sets overlay image - currently, only PNG images can be used as overlay. Overlay image is
 printed on the top of the image, once it is completely created.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>overlayImage</CODE> - Path to overlay image</DL>
</DD>
</DL>
<HR>

<A NAME="setUnit(java.lang.String)"><!-- --></A><H3>
setUnit</H3>
<PRE>
public void <B>setUnit</B>(java.lang.String&nbsp;unit)</PRE>
<DL>
<DD>Sets unit to be displayed on y axis. It is wise to use only short units on graph, however.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>unit</CODE> - Unit description</DL>
</DD>
</DL>
<HR>

<A NAME="setLazy(boolean)"><!-- --></A><H3>
setLazy</H3>
<PRE>
public void <B>setLazy</B>(boolean&nbsp;lazy)</PRE>
<DL>
<DD>Creates graph only if the current graph is out of date or not existent.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>lazy</CODE> - true, if graph should be 'lazy', false otherwise (defualt)</DL>
</DD>
</DL>
<HR>

<A NAME="setMinValue(double)"><!-- --></A><H3>
setMinValue</H3>
<PRE>
public void <B>setMinValue</B>(double&nbsp;minValue)</PRE>
<DL>
<DD>Sets the lower limit of a graph. But rather, this is the
 maximum lower bound of a graph. For example, the value -100 will
 result in a graph that has a lower limit of -100 or less.  Use this
 method to expand graphs down.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>minValue</CODE> - Minimal value displayed on the graph</DL>
</DD>
</DL>
<HR>

<A NAME="setMaxValue(double)"><!-- --></A><H3>
setMaxValue</H3>
<PRE>
public void <B>setMaxValue</B>(double&nbsp;maxValue)</PRE>
<DL>
<DD>Defines the value normally located at the upper border of the
 graph. If the graph contains higher values, the upper border will
 move upwards to accommodate these values as well.
 <p/>
 If you want to define an upper-limit which will not move in any
 event you have to use <A HREF="../../../org/rrd4j/graph/RrdGraphDef.html#setRigid(boolean)"><CODE>setRigid(boolean)</CODE></A> method as well.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>maxValue</CODE> - Maximal value displayed on the graph.</DL>
</DD>
</DL>
<HR>

<A NAME="setRigid(boolean)"><!-- --></A><H3>
setRigid</H3>
<PRE>
public void <B>setRigid</B>(boolean&nbsp;rigid)</PRE>
<DL>
<DD>Sets rigid boundaries mode. Normally Rrd4j will automatically expand
 the lower and upper limit if the graph contains a value outside the
 valid range. With the <code>true</code> argument you can disable this behavior.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>rigid</CODE> - true if uper and lower limits should not be expanded to accomodate
              values outside of the specified range. False otherwise (default).</DL>
</DD>
</DL>
<HR>

<A NAME="setBase(double)"><!-- --></A><H3>
setBase</H3>
<PRE>
public void <B>setBase</B>(double&nbsp;base)</PRE>
<DL>
<DD>Sets default base for magnitude scaling. If you are graphing memory
 (and NOT network traffic) this switch should be set to 1024 so that 1Kb is 1024 byte.
 For traffic measurement, 1 kb/s is 1000 b/s.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>base</CODE> - Base value (defaults to 1000.0)</DL>
</DD>
</DL>
<HR>

<A NAME="setLogarithmic(boolean)"><!-- --></A><H3>
setLogarithmic</H3>
<PRE>
public void <B>setLogarithmic</B>(boolean&nbsp;logarithmic)</PRE>
<DL>
<DD>Sets logarithmic y-axis scaling.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>logarithmic</CODE> - true, for logarithmic scaling, false otherwise (default).</DL>
</DD>
</DL>
<HR>

<A NAME="setColor(int, java.awt.Paint)"><!-- --></A><H3>
setColor</H3>
<PRE>
public void <B>setColor</B>(int&nbsp;colorTag,
                     java.awt.Paint&nbsp;color)</PRE>
<DL>
<DD>Overrides the colors for the standard elements of the graph. The
 colorTag must be one of the following constants defined in the <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html" title="interface in org.rrd4j.graph"><CODE>RrdGraphConstants</CODE></A>:
 <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#COLOR_BACK"><CODE>COLOR_BACK</CODE></A>ground,
 <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#COLOR_CANVAS"><CODE>COLOR_CANVAS</CODE></A>,
 <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#COLOR_SHADEA"><CODE>COLOR_SHADEA</CODE></A> left/top border,
 <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#COLOR_SHADEB"><CODE>COLOR_SHADEB</CODE></A> right/bottom border,
 <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#COLOR_GRID"><CODE>COLOR_GRID</CODE></A>,
 <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#COLOR_MGRID"><CODE>COLOR_MGRID</CODE></A> major grid,
 <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#COLOR_FONT"><CODE>COLOR_FONT</CODE></A>,
 <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#COLOR_FRAME"><CODE>COLOR_FRAME</CODE></A> and axis of the graph or
 <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#COLOR_ARROW"><CODE>COLOR_ARROW</CODE></A>. This
 method can be called multiple times to set several colors.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>colorTag</CODE> - Color tag, as explained above.<DD><CODE>color</CODE> - Any color (paint) you like</DL>
</DD>
</DL>
<HR>

<A NAME="setColor(java.lang.String, java.awt.Paint)"><!-- --></A><H3>
setColor</H3>
<PRE>
public void <B>setColor</B>(java.lang.String&nbsp;colorName,
                     java.awt.Paint&nbsp;color)</PRE>
<DL>
<DD>Overrides the colors for the standard elements of the graph by element name.
 See <A HREF="../../../org/rrd4j/graph/RrdGraphDef.html#setColor(int, java.awt.Paint)"><CODE>setColor(int, java.awt.Paint)</CODE></A> for full explanation.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>colorName</CODE> - One of the following strings: "BACK", "CANVAS", "SHADEA", "SHADEB",
                  "GRID", "MGRID", "FONT", "FRAME", "ARROW"<DD><CODE>color</CODE> - Any color (paint) you like</DL>
</DD>
</DL>
<HR>

<A NAME="setNoLegend(boolean)"><!-- --></A><H3>
setNoLegend</H3>
<PRE>
public void <B>setNoLegend</B>(boolean&nbsp;noLegend)</PRE>
<DL>
<DD>Suppress generation of legend, only render the graph.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>noLegend</CODE> - true if graph legend should be omitted. False otherwise (default).</DL>
</DD>
</DL>
<HR>

<A NAME="setOnlyGraph(boolean)"><!-- --></A><H3>
setOnlyGraph</H3>
<PRE>
public void <B>setOnlyGraph</B>(boolean&nbsp;onlyGraph)</PRE>
<DL>
<DD>Suppresses anything but the graph, works only for height < 64.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>onlyGraph</CODE> - true if only graph should be created, false otherwise (default).</DL>
</DD>
</DL>
<HR>

<A NAME="setForceRulesLegend(boolean)"><!-- --></A><H3>
setForceRulesLegend</H3>
<PRE>
public void <B>setForceRulesLegend</B>(boolean&nbsp;forceRulesLegend)</PRE>
<DL>
<DD>Force the generation of HRULE and VRULE legend even if those HRULE
 or VRULE will not be drawn because out of graph boundaries.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>forceRulesLegend</CODE> - true if rule legend should be always printed,
                         false otherwise (default).</DL>
</DD>
</DL>
<HR>

<A NAME="setTitle(java.lang.String)"><!-- --></A><H3>
setTitle</H3>
<PRE>
public void <B>setTitle</B>(java.lang.String&nbsp;title)</PRE>
<DL>
<DD>Defines a title to be written into the graph.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>title</CODE> - Graph title.</DL>
</DD>
</DL>
<HR>

<A NAME="setStep(long)"><!-- --></A><H3>
setStep</H3>
<PRE>
public void <B>setStep</B>(long&nbsp;step)</PRE>
<DL>
<DD>Suggests which time step should be used by Rrd4j while processing data from RRD files.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>step</CODE> - Desired time step (don't use this method if you don't know what you're doing).</DL>
</DD>
</DL>
<HR>

<A NAME="setSmallFont(java.awt.Font)"><!-- --></A><H3>
setSmallFont</H3>
<PRE>
public void <B>setSmallFont</B>(java.awt.Font&nbsp;smallFont)</PRE>
<DL>
<DD>Sets default font for graphing. Note that Rrd4j will behave unpredictably if proportional
 font is selected.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>smallFont</CODE> - Default font for graphing. Use only monospaced fonths.</DL>
</DD>
</DL>
<HR>

<A NAME="setLargeFont(java.awt.Font)"><!-- --></A><H3>
setLargeFont</H3>
<PRE>
public void <B>setLargeFont</B>(java.awt.Font&nbsp;largeFont)</PRE>
<DL>
<DD>Sets title font.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>largeFont</CODE> - Font to be used for graph title.</DL>
</DD>
</DL>
<HR>

<A NAME="datasource(java.lang.String, java.lang.String, java.lang.String, org.rrd4j.ConsolFun)"><!-- --></A><H3>
datasource</H3>
<PRE>
public void <B>datasource</B>(java.lang.String&nbsp;name,
                       java.lang.String&nbsp;rrdPath,
                       java.lang.String&nbsp;dsName,
                       org.rrd4j.ConsolFun&nbsp;consolFun)</PRE>
<DL>
<DD>Defines virtual datasource. This datasource can then be used
 in other methods like <A HREF="../../../org/rrd4j/graph/RrdGraphDef.html#datasource(java.lang.String, java.lang.String)"><CODE>datasource(String, String)</CODE></A> or
 <A HREF="../../../org/rrd4j/graph/RrdGraphDef.html#gprint(java.lang.String, org.rrd4j.ConsolFun, java.lang.String)"><CODE>gprint(String, ConsolFun, String)</CODE></A>.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>name</CODE> - Source name<DD><CODE>rrdPath</CODE> - Path to RRD file<DD><CODE>dsName</CODE> - Datasource name in the specified RRD file<DD><CODE>consolFun</CODE> - Consolidation function (AVERAGE, MIN, MAX, LAST)</DL>
</DD>
</DL>
<HR>

<A NAME="datasource(java.lang.String, java.lang.String, java.lang.String, org.rrd4j.ConsolFun, java.lang.String)"><!-- --></A><H3>
datasource</H3>
<PRE>
public void <B>datasource</B>(java.lang.String&nbsp;name,
                       java.lang.String&nbsp;rrdPath,
                       java.lang.String&nbsp;dsName,
                       org.rrd4j.ConsolFun&nbsp;consolFun,
                       java.lang.String&nbsp;backend)</PRE>
<DL>
<DD>Defines virtual datasource. This datasource can then be used
 in other methods like <A HREF="../../../org/rrd4j/graph/RrdGraphDef.html#datasource(java.lang.String, java.lang.String)"><CODE>datasource(String, String)</CODE></A> or
 <A HREF="../../../org/rrd4j/graph/RrdGraphDef.html#gprint(java.lang.String, org.rrd4j.ConsolFun, java.lang.String)"><CODE>gprint(String, ConsolFun, String)</CODE></A>.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>name</CODE> - Source name<DD><CODE>rrdPath</CODE> - Path to RRD file<DD><CODE>dsName</CODE> - Datasource name in the specified RRD file<DD><CODE>consolFun</CODE> - Consolidation function (AVERAGE, MIN, MAX, LAST)<DD><CODE>backend</CODE> - Backend to be used while fetching data from a RRD file.</DL>
</DD>
</DL>
<HR>

<A NAME="datasource(java.lang.String, java.lang.String)"><!-- --></A><H3>
datasource</H3>
<PRE>
public void <B>datasource</B>(java.lang.String&nbsp;name,
                       java.lang.String&nbsp;rpnExpression)</PRE>
<DL>
<DD>Create a new virtual datasource by evaluating a mathematical
 expression, specified in Reverse Polish Notation (RPN).
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>name</CODE> - Source name<DD><CODE>rpnExpression</CODE> - RPN expression.</DL>
</DD>
</DL>
<HR>

<A NAME="datasource(java.lang.String, java.lang.String, org.rrd4j.ConsolFun)"><!-- --></A><H3>
datasource</H3>
<PRE>
public void <B>datasource</B>(java.lang.String&nbsp;name,
                       java.lang.String&nbsp;defName,
                       org.rrd4j.ConsolFun&nbsp;consolFun)</PRE>
<DL>
<DD>Creates a new (static) virtual datasouce. The value of the datasource is constant. This value is
 evaluated by applying the given consolidation function to another virtual datasource.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>name</CODE> - Source name<DD><CODE>defName</CODE> - Other source name<DD><CODE>consolFun</CODE> - Consolidation function to be applied to other datasource.</DL>
</DD>
</DL>
<HR>

<A NAME="datasource(java.lang.String, org.rrd4j.data.Plottable)"><!-- --></A><H3>
datasource</H3>
<PRE>
public void <B>datasource</B>(java.lang.String&nbsp;name,
                       <A HREF="../../../org/rrd4j/data/Plottable.html" title="class in org.rrd4j.data">Plottable</A>&nbsp;plottable)</PRE>
<DL>
<DD>Creates a new (plottable) datasource. Datasource values are obtained from the given plottable
 object.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>name</CODE> - Source name.<DD><CODE>plottable</CODE> - Plottable object.</DL>
</DD>
</DL>
<HR>

<A NAME="print(java.lang.String, org.rrd4j.ConsolFun, java.lang.String)"><!-- --></A><H3>
print</H3>
<PRE>
public void <B>print</B>(java.lang.String&nbsp;srcName,
                  org.rrd4j.ConsolFun&nbsp;consolFun,
                  java.lang.String&nbsp;format)</PRE>
<DL>
<DD>Calculates the chosen consolidation function CF over the given datasource
 and creates the result by using the given format string.  In
 the format string there should be a '%[l]f', '%[l]g' or '%[l]e' marker in
 the place where the number should be printed.
 <p/>
 If an additional '%s' is found AFTER the marker, the value will be
 scaled and an appropriate SI magnitude unit will be printed in
 place of the '%s' marker. The scaling will take the '--base' argu-
 ment into consideration!
 <p/>
 If a '%S' is used instead of a '%s', then instead of calculating
 the appropriate SI magnitude unit for this value, the previously
 calculated SI magnitude unit will be used.  This is useful if you
 want all the values in a print statement to have the same SI magni-
 tude unit.  If there was no previous SI magnitude calculation made,
 then '%S' behaves like a '%s', unless the value is 0, in which case
 it does not remember a SI magnitude unit and a SI magnitude unit
 will only be calculated when the next '%s' is seen or the next '%S'
 for a non-zero value.
 <p/>
 Print results are collected in the <A HREF="../../../org/rrd4j/graph/RrdGraphInfo.html" title="class in org.rrd4j.graph"><CODE>RrdGraphInfo</CODE></A> object which is retrieved
 from the <A HREF="../../../org/rrd4j/graph/RrdGraph.html" title="class in org.rrd4j.graph"><CODE>object</CODE></A> once the graph is created.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>srcName</CODE> - Virtual source name<DD><CODE>consolFun</CODE> - Consolidation function to be applied to the source<DD><CODE>format</CODE> - Format string (like "average = %10.3f %s")</DL>
</DD>
</DL>
<HR>

<A NAME="gprint(java.lang.String, org.rrd4j.ConsolFun, java.lang.String)"><!-- --></A><H3>
gprint</H3>
<PRE>
public void <B>gprint</B>(java.lang.String&nbsp;srcName,
                   org.rrd4j.ConsolFun&nbsp;consolFun,
                   java.lang.String&nbsp;format)</PRE>
<DL>
<DD>This method does basically the same thing as <A HREF="../../../org/rrd4j/graph/RrdGraphDef.html#print(java.lang.String, org.rrd4j.ConsolFun, java.lang.String)"><CODE>print(String, ConsolFun, String)</CODE></A>,
 but the result is printed on the graph itself, below the chart area.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>srcName</CODE> - Virtual source name<DD><CODE>consolFun</CODE> - Consolidation function to be applied to the source<DD><CODE>format</CODE> - Format string (like "average = %10.3f %s")</DL>
</DD>
</DL>
<HR>

<A NAME="comment(java.lang.String)"><!-- --></A><H3>
comment</H3>
<PRE>
public void <B>comment</B>(java.lang.String&nbsp;text)</PRE>
<DL>
<DD>Comment to be printed on the graph.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>text</CODE> - Comment text</DL>
</DD>
</DL>
<HR>

<A NAME="hrule(double, java.awt.Paint, java.lang.String)"><!-- --></A><H3>
hrule</H3>
<PRE>
public void <B>hrule</B>(double&nbsp;value,
                  java.awt.Paint&nbsp;color,
                  java.lang.String&nbsp;legend)</PRE>
<DL>
<DD>Draws a horizontal rule into the graph and optionally adds a legend
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>value</CODE> - Position of the rule<DD><CODE>color</CODE> - Rule color<DD><CODE>legend</CODE> - Legend text. If null, legend text will be omitted.</DL>
</DD>
</DL>
<HR>

<A NAME="hrule(double, java.awt.Paint, java.lang.String, float)"><!-- --></A><H3>
hrule</H3>
<PRE>
public void <B>hrule</B>(double&nbsp;value,
                  java.awt.Paint&nbsp;color,
                  java.lang.String&nbsp;legend,
                  float&nbsp;width)</PRE>
<DL>
<DD>Draws a horizontal rule into the graph and optionally adds a legend
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>value</CODE> - Position of the rule<DD><CODE>color</CODE> - Rule color<DD><CODE>legend</CODE> - Legend text. If null, legend text will be omitted.<DD><CODE>width</CODE> - Rule width</DL>
</DD>
</DL>
<HR>

<A NAME="vrule(long, java.awt.Paint, java.lang.String)"><!-- --></A><H3>
vrule</H3>
<PRE>
public void <B>vrule</B>(long&nbsp;timestamp,
                  java.awt.Paint&nbsp;color,
                  java.lang.String&nbsp;legend)</PRE>
<DL>
<DD>Draws a vertical rule into the graph and optionally adds a legend
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>timestamp</CODE> - Position of the rule (seconds since epoch)<DD><CODE>color</CODE> - Rule color<DD><CODE>legend</CODE> - Legend text. Use null to omit the text.</DL>
</DD>
</DL>
<HR>

<A NAME="vrule(long, java.awt.Paint, java.lang.String, float)"><!-- --></A><H3>
vrule</H3>
<PRE>
public void <B>vrule</B>(long&nbsp;timestamp,
                  java.awt.Paint&nbsp;color,
                  java.lang.String&nbsp;legend,
                  float&nbsp;width)</PRE>
<DL>
<DD>Draws a vertical rule into the graph and optionally adds a legend
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>timestamp</CODE> - Position of the rule (seconds since epoch)<DD><CODE>color</CODE> - Rule color<DD><CODE>legend</CODE> - Legend text. Use null to omit the text.<DD><CODE>width</CODE> - Rule width</DL>
</DD>
</DL>
<HR>

<A NAME="line(java.lang.String, java.awt.Paint, java.lang.String, float)"><!-- --></A><H3>
line</H3>
<PRE>
public void <B>line</B>(java.lang.String&nbsp;srcName,
                 java.awt.Paint&nbsp;color,
                 java.lang.String&nbsp;legend,
                 float&nbsp;width)</PRE>
<DL>
<DD>Plots requested data as a line, using the color and the line width specified.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>srcName</CODE> - Virtual source name<DD><CODE>color</CODE> - Line color<DD><CODE>legend</CODE> - Legend text<DD><CODE>width</CODE> - Line width (default: 1.0F)</DL>
</DD>
</DL>
<HR>

<A NAME="line(java.lang.String, java.awt.Paint, java.lang.String)"><!-- --></A><H3>
line</H3>
<PRE>
public void <B>line</B>(java.lang.String&nbsp;srcName,
                 java.awt.Paint&nbsp;color,
                 java.lang.String&nbsp;legend)</PRE>
<DL>
<DD>Plots requested data as a line, using the color specified. Line width is assumed to be
 1.0F.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>srcName</CODE> - Virtual source name<DD><CODE>color</CODE> - Line color<DD><CODE>legend</CODE> - Legend text</DL>
</DD>
</DL>
<HR>

<A NAME="area(java.lang.String, java.awt.Paint, java.lang.String)"><!-- --></A><H3>
area</H3>
<PRE>
public void <B>area</B>(java.lang.String&nbsp;srcName,
                 java.awt.Paint&nbsp;color,
                 java.lang.String&nbsp;legend)</PRE>
<DL>
<DD>Plots requested data in the form of the filled area starting from zero, using
 the color specified.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>srcName</CODE> - Virtual source name.<DD><CODE>color</CODE> - Color of the filled area.<DD><CODE>legend</CODE> - Legend text.</DL>
</DD>
</DL>
<HR>

<A NAME="stack(java.lang.String, java.awt.Paint, java.lang.String)"><!-- --></A><H3>
stack</H3>
<PRE>
public void <B>stack</B>(java.lang.String&nbsp;srcName,
                  java.awt.Paint&nbsp;color,
                  java.lang.String&nbsp;legend)</PRE>
<DL>
<DD>Does the same as <A HREF="../../../org/rrd4j/graph/RrdGraphDef.html#line(java.lang.String, java.awt.Paint, java.lang.String)"><CODE>line(String, java.awt.Paint, String)</CODE></A>,
 but the graph gets stacked on top of the
 previous LINE, AREA or STACK graph. Depending on the type of the
 previous graph, the STACK will be either a LINE or an AREA.  This
 obviously implies that the first STACK must be preceded by an AREA
 or LINE.
 <p/>
 Note, that when you STACK onto *UNKNOWN* data, Rrd4j will not
 draw any graphics ... *UNKNOWN* is not zero.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>srcName</CODE> - Virtual source name<DD><CODE>color</CODE> - Stacked graph color<DD><CODE>legend</CODE> - Legend text
<DT><B>Throws:</B>
<DD><CODE>java.lang.IllegalArgumentException</CODE> - Thrown if this STACK has no previously defined AREA, STACK or LINE
                      graph bellow it.</DL>
</DD>
</DL>
<HR>

<A NAME="setDrawXGrid(boolean)"><!-- --></A><H3>
setDrawXGrid</H3>
<PRE>
public void <B>setDrawXGrid</B>(boolean&nbsp;drawXGrid)</PRE>
<DL>
<DD>Sets visibility of the X-axis grid.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>drawXGrid</CODE> - True if X-axis grid should be created (default), false otherwise.</DL>
</DD>
</DL>
<HR>

<A NAME="setDrawYGrid(boolean)"><!-- --></A><H3>
setDrawYGrid</H3>
<PRE>
public void <B>setDrawYGrid</B>(boolean&nbsp;drawYGrid)</PRE>
<DL>
<DD>Sets visibility of the Y-axis grid.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>drawYGrid</CODE> - True if Y-axis grid should be created (default), false otherwise.</DL>
</DD>
</DL>
<HR>

<A NAME="setImageQuality(float)"><!-- --></A><H3>
setImageQuality</H3>
<PRE>
public void <B>setImageQuality</B>(float&nbsp;imageQuality)</PRE>
<DL>
<DD>Sets image quality. Relevant only for JPEG images.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>imageQuality</CODE> - (0F=worst, 1F=best).</DL>
</DD>
</DL>
<HR>

<A NAME="setAntiAliasing(boolean)"><!-- --></A><H3>
setAntiAliasing</H3>
<PRE>
public void <B>setAntiAliasing</B>(boolean&nbsp;antiAliasing)</PRE>
<DL>
<DD>Controls if the chart area of the image should be antialiased or not.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>antiAliasing</CODE> - use true to turn antialiasing on, false to turn it off (default)</DL>
</DD>
</DL>
<HR>

<A NAME="setShowSignature(boolean)"><!-- --></A><H3>
setShowSignature</H3>
<PRE>
public void <B>setShowSignature</B>(boolean&nbsp;showSignature)</PRE>
<DL>
<DD>Shows or hides graph signature (gator) in the top right corner of the graph
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>showSignature</CODE> - true, if signature should be seen (default), false otherwise</DL>
</DD>
</DL>
<HR>

<A NAME="setFirstDayOfWeek(int)"><!-- --></A><H3>
setFirstDayOfWeek</H3>
<PRE>
public void <B>setFirstDayOfWeek</B>(int&nbsp;firstDayOfWeek)</PRE>
<DL>
<DD>Sets first day of the week.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>firstDayOfWeek</CODE> - One of the following constants:
                       <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#MONDAY"><CODE>MONDAY</CODE></A>,
                       <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#TUESDAY"><CODE>TUESDAY</CODE></A>,
                       <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#WEDNESDAY"><CODE>WEDNESDAY</CODE></A>,
                       <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#THURSDAY"><CODE>THURSDAY</CODE></A>,
                       <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#FRIDAY"><CODE>FRIDAY</CODE></A>,
                       <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#SATURDAY"><CODE>SATURDAY</CODE></A>,
                       <A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html#SUNDAY"><CODE>SUNDAY</CODE></A></DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>


<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../org/rrd4j/graph/RrdGraphConstants.html" title="interface in org.rrd4j.graph"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../org/rrd4j/graph/RrdGraphDefTemplate.html" title="class in org.rrd4j.graph"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../index.html?org/rrd4j/graph/RrdGraphDef.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="RrdGraphDef.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<HR>

</BODY>
</HTML>
